#!/bin/bash

case "$0" in
	(/*) scriptdir="$(dirname "$0")";;
	(*)  scriptdir="$(pwd)/$(dirname "$0")";;
esac

use_jq_stack() {
	JQ_STACK_MODDIR="$scriptdir/deps/jq-mods/lib"

	. "$scriptdir/deps/jq-helpers/lib/jq_stack.lib.sh"
	. "$scriptdir/deps/jq-helpers/lib/jq_stack_modcall.lib.sh"
	. "$scriptdir/deps/jq-helpers/lib/jq_stack_modload.lib.sh"
	. "$scriptdir/deps/jq-helpers/lib/jq_stack_oneline.lib.sh"

	#. "$scriptdir/deps/jq-mods/jqf.lib.sh"

	jqf() {
		jq_stack modcall "$@"
	}
}

while [ $# -gt 0 ]; do
	case "$1" in
	('-s') shift;set -- --use jq_stack "$@" ;;
	esac
	case "$1" in
	('--use') shift
		if [ $# -gt 1 ]; then
			"use_$1"
		else
			echo >&2 "ERROR: --use missing argument"
			exit 1
		fi
	;;
	('-l'|'--list')
		(	cd "$scriptdir/mods/conv" &&
			ls -d1 */*.mod.sh |sed -e 's,\.mod\.sh$,,g' | sort
		)
		exit 0
	;;
	('-n'|'--dry-run') CONV_WRITE=false;;
	('-w'|'--write') CONV_WRITE=true;; # use for json_ff/flatfiles
	('--') shift; break ;;
	('-*') echo >&2 "ERROR: invalid option"; exit 1 ;;
	(*) break
	esac
	shift
done

if [ $# -eq 0 ]; then
	echo >&2 "Usage: conv [<options>] <fmt1>/<fmt2>[/<fmt3>[/...]] [args...]"
	exit 1
fi

_conv_alias() {
	case "$1" in
	(fs) echo "flatfiles";;
	(R) echo "rgrepn";;
	esac
}

_conv() {
	while [ $# -gt 0 ]; do
		case "$1" in
		(fs/*) local z="${1#*/}";shift;set -- "flatfiles/$z" "$@";;
		(*/fs) local a="${1%/*}";shift;set -- "$a/flatfiles" "$@";;
		esac
		local solution="$(case "$1" in
		(rgrepn/json_dfv)	echo "rgrepn/json_dfnl/json_dfv";;
		(rgrepn/json_ff)	echo "rgrepn/json_dfnl/json_dfv/json_ff";;
		(rgrepn/flatfiles)	echo "rgrepn/json_dfnl/json_dfv/json_ff/flatfiles";;
		(rgrep/json_dfv)	echo "rgrep/rgrepn/json_dfnl/json_dfv";;
		(json_object/csv)	echo "json_object/json_array/csv";;
		(json_object/tvs)	echo "json_object/json_array/tsv";;
		(json_object/rgrep)	echo "json_object/rgrepn/rgrep";;
		#./mods/conv/rgrep/json_struct_dfv.mod.sh.via <- indexed_dfv
		(rgrepn/tsv) ;;
		esac)"
		if [ -n "$solution" ]; then
			shift;set -- "$solution" "$@"
		fi

		case "$1" in
		(*/*/*)
			local a="${1%%/*}"
			local bc_="${1#*/}"
			local b="${bc_%%/*}"
			shift;
			set -- "${a}/${b}" "${bc_}" "$@"
			_conv "$@"
			return $?
		;;
		(*/*)
			local a="${1%%/*}"
			local b="${1#*/}"
			shift
			if [ $# -eq 0 ]; then
				(
					RequireMod "conv/${a}/${b}"
					local name="${a}_to_${b}"
					"$name" "$@"
				)
			else
				(
					RequireMod "conv/${a}/${b}"
					local name="${a}_to_${b}"
					"$name" "$@"
				) | (
					_conv "$@"
				)
			fi
			return $?
		;;
		esac
		shift
	done
}

RequireMod() {
	if [ -z "$scriptdir" ]; then
		echo >&2 "ERROR: scriptdir variable not defined"
		return 1
	fi
	if [ -z "$1" ]; then
		echo >&2 "ERROR: Require: missing argument"
		return 1
	fi
	. "${scriptdir}/mods/$1.mod.sh"
}

Deps() {
	local self="Deps"
	while [ $# -gt 0 ]; do
		if ! command >/dev/null 2>&1 -v "$1"; then
			echo >&2 "ERROR: ${self}: missing dependency (command $1)"
			return 1
		fi
		shift
	done
	return 0
}

_conv "$@"
