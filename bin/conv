#!/bin/bash

a0="$(realpath "$0" 2>/dev/null || readlink -f "$0" 2>/dev/null || echo "$0")"

case "$a0" in
	(/*) scriptdir="$(dirname "$a0")/..";;
	(*)  scriptdir="$(pwd)/$(dirname "$a0")/..";;
esac

CONV_I=''
CONV_O=''
while [ $# -gt 0 ]; do
	case "$1" in
	('-l'|'--list')
		(	cd "$scriptdir/mods/conv" &&
			ls -d1 */*.mod.sh |sed -e 's,\.mod\.sh$,,g' | sort
		)
		exit 0
	;;
	('--deps')              CONV_DEPS_ONLY=true;;
	('-n'|'--dry-run')      CONV_WRITE=false;;
	('-w'|'--write')        CONV_WRITE=true;; # use for json_dfv/fs
	('-I'|'--in-ndjson')    CONV_I=true;;
	('-O'|'--out-ndjson')   CONV_O=true;;
	('--') shift; break ;;
	('-'*) echo >&2 "ERROR: invalid option"; exit 1 ;;
	(*) break
	esac
	shift
done

# -I|--in-ndjson      add an ndjson/json at the beginning
# -O|--out-ndjson     add an json/ndjson at the ending

if [ $# -eq 0 ]; then
	echo >&2 "Usage: conv [<options>] <fmt1>/<fmt2>[/<fmt3>[/...]] [args...]"
	exit 1
fi

if ${CONV_I:-false}; then
	set -- ndjson/json "$@"
fi
if ${CONV_O:-false}; then
	set -- "$@" json/ndjson
fi

_conv_alias() {
	case "$1" in
	(flatfiles) echo "fs";;
	(R) echo "rgrepn";;
	esac
}

_conv() {
	while [ $# -gt 0 ]; do
		case "$1" in
		(flatfiles/*) local z="${1#*/}";shift;set -- "fs/$z" "$@";;
		(*/flatfiles) local a="${1%/*}";shift;set -- "$a/fs" "$@";;
		esac

		local solution="$(
			local a="${1%%/*}"		# aa(xx)/bb(yy)	-> aa(xx)
			a="${a%%(*}"		#)	# aa(xx)	-> aa
			local b="${1#*/}"		# aa(xx)/bb(yy)	-> bb(yy)
			b="${b%%(*}"		#)	# bb(yy)	-> bb
			if [ -f "${scriptdir}/mods/conv-via/$a/$b.via.sh" ]; then
				. "${scriptdir}/mods/conv-via/$a/$b.via.sh";
				"${a}_to_${b}_via"
			fi
		)"
		if [ -n "$solution" ]; then
			shift;set -- $solution "$@"
#for x in "$@"; do echo . "$x"; done
		fi

		case "$1" in
		(?*-) # gzip- -> gzip/raw
			local a="$1";shift
			set -- "${a%[+-]}/raw" "$@"
			continue
		;;
		(?*+) # gzip+ -> raw/gzip
			local a="$1";shift
			set -- "raw/${a%[+-]}" "$@"
			continue
		;;
		esac
		case "$1" in
		(*/*/*)
			case "${1%%(*}" in
			(*/*);;
			esac
			local a="${1%%/*}"		# aa(xx)/bb(yy)/cc(zz) -> aa(xx)
			local bc_="${1#*/}"		# aa(xx)/bb(yy)/cc(zz) -> bb(yy)/cc(zz)
			local b="${bc_%%/*}"		# bb(yy)/cc(zz)        -> bb(yy)
			shift;
			set -- "${a}/${b}" "${bc_}" "$@" # aa(xx)/bb(yy)/cc(zz) --> aa(xx)/bb(yy) bb(yy)/cc(zz)
			continue
		;;
		(*/*)
			local a="${1%%/*}"		# aa(xx)/bb(yy) -> aa(xx)
			a="${a%%(*}"			# aa(xx)        -> aa
			local b="${1#*/}"		# aa(xx)/bb(yy) -> bb(yy)
			shift
			local bargs=''
			case "$b" in
			(*'('*')')			# bb(yy)
				bargs="${b#*(}"		# bb(yy) -> yy)
				bargs='('"${bargs}"	# yy)    -> (yy)
				b="${b%%(*}"		# bb(yy) -> bb
			;;
			esac

			if [ $# -eq 0 ]; then
				(
					RequireMod "conv/${a}/${b}"
					local name="${a}_to_${b}"
					if ${CONV_DEPS_ONLY:-false}; then
						if command -v "${name}_deps" >/dev/null 2>&1; then
							#echo >&2 "module $a/$b deps function exists"
							"${name}_deps" && echo >&2 "deps: ok: $a/$b" || echo >&2 "deps: KO: $a/$b"
						else
							echo >&2 "module $a/$b deps function is MISSING. Please edit mods/conv/$a/$b.mod.sh"
							return 1
						fi
						return $?
					fi
					"$name" "$bargs"
				)
			else
				if ${CONV_DEPS_ONLY:-false}; then
					_conv "${a}/${b}"
					_conv "$@"
					return $?
				fi
				(
					RequireMod "conv/${a}/${b}"
					local name="${a}_to_${b}"
					"$name" "$bargs"
				) | (
					_conv "$@"
				)
			fi
			return $?
		;;
		esac
		shift
	done
}

RequireMod() {
	if [ -z "$scriptdir" ]; then
		echo >&2 "ERROR: scriptdir variable not defined"
		return 1
	fi
	if [ -z "$1" ]; then
		echo >&2 "ERROR: Require: missing argument"
		return 1
	fi
	if [ ! -f "${scriptdir}/mods/$1.mod.sh" ]; then
		echo >&2 "ERROR: $a/$b not available"
		return 1
	fi
	. "${scriptdir}/mods/$1.mod.sh"
}

Deps() {
	local self="Deps"
	while [ $# -gt 0 ]; do
		if ! command >/dev/null 2>&1 -v "$1"; then
			echo >&2 "ERROR: ${self}: missing dependency (command $1)"
			return 1
		fi
		shift
	done
	return 0
}

_conv "$@"
